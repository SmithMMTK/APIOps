name: Run - Publisher

on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [main]
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      COMMIT_ID_CHOICE:
        description: 'Choose "publish-all-artifacts-in-repo" only when you want to force republishing all artifacts (e.g. after build failure). Otherwise stick with the default behavior of "publish-artifacts-in-last-commit"'
        required: true
        type: choice
        default: "publish-artifacts-in-last-commit"
        options:
          - "publish-artifacts-in-last-commit"
          - "publish-all-artifacts-in-repo"
      API_MANAGEMENT_SERVICE_NAME:
        description: 'API Management service instance name'
        required: true
        default: sm1th-v2

jobs:
  get-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Set the Commit Id
        id: commit
        run: echo "commit_id=${GITHUB_SHA}" >> $GITHUB_ENV
    outputs:
      commit_id: ${{ steps.commit.outputs.commit_id }}

  # Publish with Commit ID
  Push-Changes-To-APIM-Dev-With-Commit-ID:
    if: (github.event.inputs.COMMIT_ID_CHOICE == 'publish-artifacts-in-last-commit' || github.event.inputs.COMMIT_ID_CHOICE == '')
    needs: get-commit
    uses: ./.github/workflows/run-publisher-with-env.yaml
    with:
      API_MANAGEMENT_ENVIRONMENT: uat
      COMMIT_ID: ${{ needs.get-commit.outputs.commit_id }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
      API_MANAGEMENT_SERVICE_NAME: ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}
    secrets: inherit

  # Publish without Commit ID (all artifacts)
  Push-Changes-To-APIM-Dev-Without-Commit-ID:
    if: (github.event.inputs.COMMIT_ID_CHOICE == 'publish-all-artifacts-in-repo')
    needs: get-commit
    uses: ./.github/workflows/run-publisher-with-env.yaml
    with:
      API_MANAGEMENT_ENVIRONMENT: uat
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
      API_MANAGEMENT_SERVICE_NAME: ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}
    secrets: inherit

  # Future: Prod with Commit ID
  # Push-Changes-To-APIM-Prod-With-Commit-ID:
  #   if: (github.event.inputs.COMMIT_ID_CHOICE == 'publish-artifacts-in-last-commit' || github.event.inputs.COMMIT_ID_CHOICE == '')
  #   needs: [get-commit, Push-Changes-To-APIM-Dev-With-Commit-ID]
  #   uses: ./.github/workflows/run-publisher-with-env.yaml
  #   with:
  #     API_MANAGEMENT_ENVIRONMENT: prod
  #     CONFIGURATION_YAML_PATH: configuration.prod.yaml
  #     API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
  #     COMMIT_ID: ${{ needs.get-commit.outputs.commit_id }}
  #     API_MANAGEMENT_SERVICE_NAME: ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}
  #   secrets: inherit

  # Future: Prod without Commit ID
  # Push-Changes-To-APIM-Prod-Without-Commit-ID:
  #   if: (github.event.inputs.COMMIT_ID_CHOICE == 'publish-all-artifacts-in-repo')
  #   needs: [get-commit, Push-Changes-To-APIM-Dev-Without-Commit-ID]
  #   uses: ./.github/workflows/run-publisher-with-env.yaml
  #   with:
  #     API_MANAGEMENT_ENVIRONMENT: prod
  #     CONFIGURATION_YAML_PATH: configuration.prod.yaml
  #     API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
  #     API_MANAGEMENT_SERVICE_NAME: ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}
  #   secrets: inherit
