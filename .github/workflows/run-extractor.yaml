name: Run - Extractor

on:
  workflow_dispatch:
    inputs:
      CONFIGURATION_YAML_PATH:
        description: 'Choose whether to extract all APIs or only those listed in a configuration file'     
        required: true
        type: choice
        options:
        - Extract All APIs
        - configuration.extractor.yaml
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'     
        required: true
        type: choice
        options:
        - OpenAPIV3Yaml 
        - OpenAPIV3Json
        - OpenAPIV2Yaml
        - OpenAPIV2Json
      API_MANAGEMENT_SERVICE_NAME:
        description: 'Name of the API Management Service'
        required: true
        default: sm1th-v1

env:
  apiops_release_version: v6.0.1.7

jobs:
  extract:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Run extractor without Config Yaml
        if: ${{ github.event.inputs.CONFIGURATION_YAML_PATH == 'Extract All APIs' }}
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          API_MANAGEMENT_SERVICE_NAME: ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts
          API_SPECIFICATION_FORMAT: ${{ github.event.inputs.API_SPECIFICATION_FORMAT }}
        run: |
          # (unchanged PowerShell script here)
        shell: pwsh

      - name: Run extractor with Config Yaml
        if: ${{ github.event.inputs.CONFIGURATION_YAML_PATH != 'Extract All APIs' }}
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          API_MANAGEMENT_SERVICE_NAME: ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts
          API_SPECIFICATION_FORMAT: ${{ github.event.inputs.API_SPECIFICATION_FORMAT }}
          CONFIGURATION_YAML_PATH:  ${{ GITHUB.WORKSPACE }}/${{ github.event.inputs.CONFIGURATION_YAML_PATH }}
        run: |
          # (unchanged PowerShell script here)
        shell: pwsh

      - name: publish artifact
        uses: actions/upload-artifact@v4
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/apimartifacts    

  create-pull-request:
    needs: extract
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts-from-portal
        uses: actions/download-artifact@v4
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
        with:
          name: artifacts-from-portal
          path: "${{ GITHUB.WORKSPACE }}/apimartifacts"

      - name: Create artifacts pull request
        uses: peter-evans/create-pull-request@v6
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "updated extract from apim instance ${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }}"
          title: "${{ github.event.inputs.API_MANAGEMENT_SERVICE_NAME }} - extract"
          body: >
            This PR is auto-generated by Github actions workflow
          labels: extract, automated pr
